{
  "common": {
    "home": "Home",
    "settings": "Settings",
    "language": "Language",
    "back": "Back",
    "save": "Save",
    "saving": "Saving...",
    "saved": "Saved",
    "noChanges": "No changes",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "clear": "Clear",
    "form": "Form",
    "validate": "Validate",
    "loading": "Loading...",
    "servers": "Servers",
    "test": "Test",
    "tokens": "Tokens",
    "error": "Error",
    "success": "Success",
    "close": "Close",
    "remove": "Remove",
    "removing": "Removing...",
    "copiedToClipboard": "Copied to clipboard",
    "search": "Search",
    "reset": "Reset",
    "update": "Update",
    "copy": "Copy",
    "send": "Send",
    "stop": "Stop",
    "approve": "Approve",
    "deny": "Deny"
  },
  "languages": {
    "en": "English",
    "zh": "Simplified Chinese"
  },
  "locale": "en-US",
  "login": {
    "title": "Login to MCP Router",
    "description": "Login to access this feature",
    "loginButton": "Login",
    "skipButton": "Skip Login"
  },
  "home": {
    "title": "MCP Router",
    "servers": "Servers",
    "clients": "Clients",
    "logs": "Logs",
    "welcome": "Welcome to MCP Router",
    "description": "A tool for managing MCP servers and providing APIs"
  },
  "notification": {
    "success": "Success",
    "error": "Error"
  },
  "logs": {
    "title": "Logs",
    "filter": "Filter",
    "clear": "Clear Logs",
    "timestamp": "Timestamp",
    "level": "Level",
    "message": "Message",
    "source": "Source",
    "noLogs": "No logs available",
    "viewer": {
      "hideFilters": "Hide Filters",
      "showFilters": "Show Filters",
      "refresh": "Refresh Data",
      "lastUpdated": "Last Updated",
      "clientTimeSeriesTitle": "Client Request Statistics (Time Series)",
      "requestTypeTimeSeriesTitle": "Request Type Statistics (Time Series)",
      "toolCallsTitle": "Tool Usage Timeline",
      "noData": "No data available",
      "noToolCalls": "No tool calls available",
      "callCount": "{{count}} calls",
      "successCount": "Success: {{count}}",
      "errorCount": "Failed: {{count}}",
      "selectClient": "Please select a client",
      "clientTimeSeries": {
        "update": "Update"
      },
      "requestTimeSeries": {
        "update": "Update",
        "other": "Other"
      },
      "detail": {
        "timestamp": "Timestamp",
        "processingTime": "Processing Time",
        "client": "Client",
        "server": "Server",
        "requestType": "Request Type",
        "status": "Status",
        "success": "Success",
        "error": "Error",
        "requestParams": "Request Parameters",
        "responseData": "Response Data",
        "none": "None",
        "dataFormat": "Data Format",
        "includedKeys": "Included Keys",
        "largeResponseWarning": "Response is too large, content display is limited",
        "errorMessage": "Error Message"
      },
      "table": {
        "title": "Request Logs",
        "showing": "Showing {{start}} - {{end}} of {{total}} items",
        "noLogs": "No logs available",
        "timestamp": "Timestamp",
        "client": "Client",
        "server": "Server",
        "requestType": "Request Type",
        "requestContent": "Request Content",
        "status": "Status",
        "processingTime": "Processing Time",
        "success": "Success",
        "error": "Error",
        "previous": "Previous",
        "next": "Next",
        "itemsPerPage": "{{count}} items"
      },
      "dateFormat": {
        "long": "{{date, datetime}}",
        "shortDate": "MM-DD",
        "shortDateTime": "MM-DD HH:mm",
        "shortDateTimeWithSeconds": "MM-DD HH:mm:ss"
      }
    }
  },
  "discoverServers": {
    "title": "Set Up Any MCP Server",
    "serverNameRequired": "Please enter a server name"
  },
  "serverList": {
    "title": "MCP Servers",
    "count": "{{count}} MCP server",
    "countPlural": "{{count}} MCP servers",
    "noServers": "No servers configured",
    "addServer": "Add server",
    "status": {
      "running": "Running",
      "starting": "Starting",
      "stopping": "Stopping",
      "stopped": "Stopped",
      "error": "Error"
    },
    "serverStarted": "Server started successfully",
    "serverStopped": "Server stopped successfully",
    "activeNow": "Active Now",
    "start": "Start",
    "stop": "Stop",
    "errorDetails": "Error Details",
    "configRequired": "Config Required",
    "requiredParamsNotSet": "Required parameters are not configured"
  },
  "settings": {
    "title": "Settings",
    "authentication": "Authentication",
    "appearance": "Appearance",
    "theme": "Theme",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeSystem": "System",
    "loginOptionalDescription": "Login is optional. You can use MCP Router without an account, though some features may be limited.",
    "login": "Login",
    "loggingIn": "Logging in...",
    "logout": "Logout",
    "loggingOut": "Logging out...",
    "loggedInAs": "Logged in as",
    "creditBalance": "Credit Balance",
    "credits": "Credits",
    "freeCredits": "Free Credits",
    "paidCredits": "Paid Credits",
    "freeCreditsDescription": "Get 1 credit each time your shared agents are used.",
    "refreshCredits": "Refresh",
    "refreshingCredits": "Refreshing..."
  },
  "mcpApps": {
    "title": "MCP App Integrations",
    "description": "Manage MCP configuration for supported AI applications.",
    "addCustomApp": "Add Custom App",
    "customAppDescription": "Create a custom app integration with MCP Router.",
    "enterAppName": "Enter custom app name",
    "configured": "MCP Router is configured for this application.",
    "notConfigured": "MCP Router configuration is not set up for this application.",
    "installRequired": "Install this application to use MCP Router with it.",
    "howToUse": "How To Use",
    "addMcpConfig": "Add MCP Config",
    "notAvailable": "Not Available",
    "serverAccess": "Access Control",
    "serverAccessTab": "Server Access",
    "selectServers": "Select which servers this app can access:",
    "accessControlSaved": "Access control settings saved successfully",
    "noTokenAvailable": "No token available for this app. Token scopes can only be configured for apps with active tokens.",
    "enterValidName": "Please enter a valid app name",
    "notInstalled": "Not Installed",
    "installed": "Installed",
    "multipleConfigs": "Multiple Configs",
    "unify": "Unify",
    "delete": "Delete",
    "confirmDelete": "Confirm Delete",
    "deleteWarning": "Are you sure you want to delete this custom app? This action cannot be undone.",
    "deleteSuccess": "App deleted successfully",
    "deleteFailed": "Failed to delete app"
  },
  "serverDetails": {
    "configuration": "Configuration",
    "serverName": "Server Name",
    "finalCommand": "Execution Command",
    "noInputParams": "No input parameters",
    "parameters": "Parameters",
    "advancedSettings": "Advanced Settings",
    "advancedConfiguration": "Advanced Configuration",
    "advancedConfigurationDescription": "Configure advanced server settings including command, arguments, and environment variables",
    "generalSettings": "General Settings",
    "inputParameters": "Input Parameters",
    "editParameters": "Edit Parameters",
    "editParametersDescription": "Edit input parameters for this server",
    "selectDirectory": "Select Directory",
    "selectFile": "Select File",
    "browse": "Browse",
    "notConfigured": "Not configured",
    "none": "None",
    "localServer": "Local Server",
    "remoteServer": "Remote Server",
    "remoteUrl": "Remote URL",
    "bearerToken": "Bearer Token",
    "bearerTokenPlaceholder": "Enter Bearer token for authentication",
    "bearerTokenHelp": "Authentication token used for secure access to the remote server.",
    "editConfiguration": "Edit Configuration",
    "editConfigurationDescription": "Edit your server configuration. Changes may require server restart.",
    "name": "Name",
    "namePlaceholder": "Enter server name",
    "command": "Command",
    "commandPlaceholder": "e.g. node, python, npx",
    "arguments": "Arguments",
    "noArguments": "No arguments configured.",
    "argumentPlaceholder": "Enter argument",
    "addArgument": "Add Argument",
    "environmentVariables": "Environment Variables",
    "noEnvironmentVariables": "No environment variables configured.",
    "addEnvironmentVariable": "Add Environment Variable",
    "key": "Key",
    "value": "Value",
    "remove": "Remove",
    "saveChanges": "Save Changes",
    "startServer": "Start Server",
    "stopServer": "Stop Server",
    "uninstall": "Uninstall",
    "confirmRemove": "Are you sure you want to remove {{name}}?",
    "requestLogs": "Request Logs",
    "noRequestLogs": "No request logs available",
    "serverNeedsToBeStarted": "Server needs to be started to generate request logs",
    "start": "Start",
    "stop": "Stop",
    "edit": "Edit",
    "updateSuccess": "Server configuration updated",
    "updateFailed": "Failed to update server configuration",
    "removeSuccess": "Server removed",
    "removeFailed": "Failed to remove server",
    "removeWarning": "Removing this server will delete its configuration and files. This action cannot be undone.",
    "removeName": "Server name: {{name}}",
    "autoRefresh": "Auto Refresh",
    "failedToFetchLogs": "Failed to fetch logs",
    "logsRefreshed": "Logs refreshed",
    "tools": "Tools",
    "startWithLogs": "Start with Logs",
    "startWithLogsDescription": "Start server and show real-time logs",
    "serverStartedWithLogs": "Server started with logs",
    "startWithLogsFailed": "Failed to start with logs",
    "serverMustBeRunning": "Server must be running for this operation",
    "serverInfoOpened": "Server info opened in new tab",
    "viewAPISpec": "View API Spec",
    "viewAPISpecDescription": "View API specification for this server",
    "serverRefreshed": "Server refreshed",
    "refreshFailed": "Failed to refresh server",
    "refreshServer": "Refresh Server",
    "refreshServerDescription": "Stop and restart the server",
    "configExported": "Configuration exported",
    "exportFailed": "Failed to export configuration",
    "exportConfig": "Export Configuration",
    "exportConfigDescription": "Export server configuration as JSON file",
    "itemsCount": "items",
    "serverStopped": "Server stopped",
    "commandNotFound": "Command is not installed. Server startup may fail.",
    "autoStart": "Auto Start",
    "autoStartToggleLabel": "Enable auto-start"
  },
  "server": {
    "status": {
      "running": "Running",
      "stopped": "Stopped",
      "starting": "Starting",
      "stopping": "Stopping",
      "error": "Error"
    }
  },
  "importFromJson": {
    "title": "Import from JSON",
    "description": "Import MCP servers from a JSON configuration file",
    "import": "Import JSON Configuration",
    "errorTitle": "Invalid JSON Configuration",
    "errorInvalidJson": "The provided input is not valid JSON.",
    "errorNoMcpServers": "The configuration must contain an 'mcpServers' object.",
    "errorEmptyMcpServers": "The 'mcpServers' object must contain at least one server.",
    "errorInvalidServerConfig": "Invalid server configuration for '{{serverName}}'.",
    "errorMissingCommand": "Server '{{serverName}}' is missing the required 'command' field.",
    "errorInvalidArgs": "Server '{{serverName}}' has invalid 'args'. It must be an array.",
    "errorUnknown": "An unknown error occurred.",
    "errorFailedImport": "Failed to import servers from JSON.",
    "successImport": "Successfully imported {{count}} server(s).",
    "partialSuccess": "Partial success: {{success}} server(s) imported, {{fail}} failed."
  },
  "manual": {
    "title": "Manual Server Configuration",
    "description": "Create MCP server configurations manually",
    "createManually": "Create Manually",
    "importFromJson": "Import JSON",
    "importFromDxt": "DXT Import",
    "create": "Create Server",
    "serverName": "Server Name",
    "command": "Command",
    "args": "Arguments",
    "argsHelp": "Space-separated list of arguments",
    "headless": "Headless",
    "allowDangerous": "Allow Dangerous",
    "successCreate": "Successfully created server '{{name}}'.",
    "errorFailedCreate": "Failed to create server.",
    "successConnectRemote": "Successfully connected to remote server '{{name}}'.",
    "errorFailedConnectRemote": "Failed to connect to remote server.",
    "autoStart": "Auto Start",
    "remote": {
      "name": "Remote Server",
      "description": "Connect to a remote MCP server. For OAuth flows, we recommend using mcp-remote.",
      "serverName": "Server Name",
      "serverUrl": "Server URL",
      "bearerToken": "Bearer Token",
      "transportType": "Transport Type",
      "transportSSE": "SSE (Server-Sent Events)",
      "transportStreamable": "Streamable HTTP",
      "connect": "Connect",
      "connectedServers": "Connected Servers"
    },
    "errors": {
      "nameRequired": "Server name is required",
      "commandRequired": "Command is required",
      "argsRequired": "Arguments are required",
      "urlRequired": "Server URL is required"
    },
    "dxt": {
      "title": "Import from DXT File",
      "description": "Import DXT file to import MCP server",
      "importServers": "Import Servers",
      "clickToUpload": "Click to upload or drag and drop",
      "dxtFilesOnly": "DXT files only",
      "remove": "Remove",
      "error": "Error",
      "errorInvalidFile": "Please select a valid DXT file",
      "successImport": "Successfully imported {{name}}",
      "errorFailedImport": "Failed to import DXT file"
    }
  },
  "pagination": {
    "showing": "Showing {{start}} to {{end}} of {{total}} items",
    "noItems": "No items to display",
    "first": "First Page",
    "previous": "Previous",
    "next": "Next",
    "last": "Last Page",
    "page": "Page {{current}} of {{total}}",
    "itemsPerPage": "Items per page"
  },
  "updateNotification": {
    "title": "Update Available",
    "installNow": "Install Now"
  },
  "workspace": {
    "title": "Workspace",
    "selectWorkspace": "Select Workspace",
    "addNew": "Add New Workspace",
    "manage": "Manage Workspaces",
    "local": "Local",
    "remote": "Remote",
    "teamName": "Team Name",
    "createWorkspace": "Create Workspace",
    "editWorkspace": "Edit Workspace",
    "deleteWorkspace": "Delete Workspace",
    "workspaceName": "Workspace Name",
    "workspaceType": "Workspace Type",
    "confirmDelete": "Are you sure you want to delete {{name}}?",
    "deleteWarning": "This action cannot be undone. All data in this workspace will be permanently deleted.",
    "created": "Workspace created successfully",
    "updated": "Workspace updated successfully",
    "deleted": "Workspace deleted successfully",
    "switched": "Switched to workspace: {{name}}",
    "errors": {
      "createFailed": "Failed to create workspace",
      "updateFailed": "Failed to update workspace",
      "deleteFailed": "Failed to delete workspace",
      "switchFailed": "Failed to switch workspace",
      "fetchFailed": "Failed to fetch workspaces"
    }
  }
}
